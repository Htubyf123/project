/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.scrapper.domain.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import ru.tinkoff.edu.java.scrapper.domain.jooq.tables.Chats;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChatsRecord extends UpdatableRecordImpl<ChatsRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.chats.chat_id</code>.
     */
    public void setChatId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.chats.chat_id</code>.
     */
    public Integer getChatId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.chats.username</code>.
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.chats.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Chats.CHATS.CHAT_ID;
    }

    @Override
    public Field<String> field2() {
        return Chats.CHATS.USERNAME;
    }

    @Override
    public Integer component1() {
        return getChatId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public Integer value1() {
        return getChatId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public ChatsRecord value1(Integer value) {
        setChatId(value);
        return this;
    }

    @Override
    public ChatsRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public ChatsRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChatsRecord
     */
    public ChatsRecord() {
        super(Chats.CHATS);
    }

    /**
     * Create a detached, initialised ChatsRecord
     */
    public ChatsRecord(Integer chatId, String username) {
        super(Chats.CHATS);

        setChatId(chatId);
        setUsername(username);
    }
}
